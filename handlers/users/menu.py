from aiogram.dispatcher.filters import Command, Text
from aiogram.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from keyboards.default.menuKeyboard import menu
from keyboards.default.categoryKeyboard import get_keyboard, categories
from aiogram import types
from states.aboutProduct import Lists
from loader import dp, bot
from handlers.lists.utils import get_cancel

from aiogram import types
from loader import dp

menu = types.InlineKeyboardMarkup(row_width=1)
buttons = [
    types.InlineKeyboardButton(text='–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', url='https://forms.gle/XhWxsSgd2gQ5QjgR8'),
    types.InlineKeyboardButton(text='–£–∫–∞–∑–∞—Ç—å —Ç–æ—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥—Ä—É–∑–∞', callback_data='utpg'),
]
menu.add(*buttons)

@dp.message_handler(commands='bulkorder')
async def show_menu(message: types.Message):
    await message.answer("–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑-–∑–∞ —Ä—É–±–µ–∂–∞?\n\n"
                         "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –≥—Ä—É–∑–µ:\n\n"
                         " - –æ–±—â–∏–π –æ–±—ä–µ–º –∏ –≤–µ—Å\n"
                         " - –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\n"
                         " - –±—Ä–µ–Ω–¥–æ–≤—ã–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –Ω–µ—Ç\n"
                         " - —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ ,$\n\n"
                         "–ù–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö –º—ã —Å–º–æ–∂–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏.\n\n")
    
    await message.answer("–ü–æ—á–µ–º—É –ø—Ä–∏–º–µ—Ä–Ω—É—é?\n\n"
                         "–ü–æ—Ç–æ–º—É —á—Ç–æ, –ø–æ—Å–ª–µ —É–ø–∞–∫–æ–≤–∫–∏ –≥—Ä—É–∑–∞ –µ–≥–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –≤–µ—Å –∏ –æ–±—ä–µ–º –±—É–¥—É—Ç –¥—Ä—É–≥–∏–º–∏.\n\n"
                         "–¢–∞–∫–∂–µ –≤ –¥–∞–Ω–Ω–æ–º —Ä–∞—Å—á—ë—Ç–µ –Ω–µ –±—É–¥—É—Ç —É—á—Ç–µ–Ω—ã —Ä—ã–Ω–æ—á–Ω—ã–µ —Å–±–æ—Ä—ã, —Å—Ç–æ–∏–º–æ—Å—Ç—å —É–ø–∞–∫–æ–≤–∫–∏ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞.")
    
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∏—Ç—å?", reply_markup=menu)

# @dp.callback_query_handler(lambda query: query.data == 'iu')
# async def handle_sea_button(callback_query: types.CallbackQuery):
#     await callback_query.answer()
#     await callback_query.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=categories)

# @dp.message_handler(text="–ì—É–∞–Ω—á–∂–æ—É üá®üá≥ - –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω")
# async def send_link2(message: Message):
#     keyboard = get_keyboard(categories)
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=buttons)


# @dp.message_handler(text="üîô –ù–∞–∑–∞–¥")
# async def send_link3(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∞–≤–∏—Ç—å?', reply_markup=menu)


# # automatiove
# @dp.message_handler(Text(equals='üîå –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –±–µ–∑ –ê–ö–ë', ignore_case=True), state=None)
# async def bez_akb(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üîã –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ —Å –ê–ö–ë', ignore_case=True), state=None)
# async def s_akb(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üè∏ –°–ø–æ—Ä—Ç.–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', ignore_case=True), state=None)
# async def sport_inventar(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üèö –•–æ–∑.—Ç–æ–≤–∞—Ä—ã', ignore_case=True), state=None)
# async def xoz_tovari(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üëü –û–±—É–≤—å, –æ–¥–µ–∂–¥–∞, —Å—É–º–∫–∏', ignore_case=True), state=None)
# async def obuv_odejda_sumki(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üöó  –ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏', ignore_case=True), state=None)
# async def avto_zapchast(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üõ† –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', ignore_case=True), state=None)
# async def tech(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üõã –ú–µ–±–µ–ª—å', ignore_case=True), state=None)
# async def mebel(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üß∏ –ò–≥—Ä—É—à–∫–∏', ignore_case=True), state=None)
# async def toys(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üéÆ –í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã', ignore_case=True), state=None)
# async def video_cards(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())


# @dp.message_handler(Text(equals='üßµ –¢–µ–∫—Å—Ç–∏–ª—å', ignore_case=True), state=None)
# async def textile(message: types.Message) -> None:
#     await Lists.photo.set()
#     await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞.',
#                          reply_markup=get_cancel())
