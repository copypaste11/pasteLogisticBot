from aiogram import types
from aiogram.types import ContentTypes, ReplyKeyboardRemove
from aiogram.dispatcher.filters import CommandStart
from loader import dp, bot
from states.aboutProduct import Lists
from aiogram.dispatcher import FSMContext


@dp.message_handler(CommandStart())
async def start_command(message: types.Message, state: FSMContext):
    text = ("@logisticagency_bot ‚Äî —Å–µ—Ä–≤–∏—Å –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥\n\n"
            "<b>–ì–ª–∞–≤–Ω–æ–µ</b>\n"
            "/help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "<b>–û –Ω–∞—Å</b>\n"
            "/aboutus ‚Äî –û –Ω–∞—Å\n"
            "/ouradresses ‚Äî –ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞\n\n"
            "<b>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫</b>\n"
            "/bulkorder ‚Äî –û–ø—Ç–æ–≤—ã–µ —Ä–∞—Å—á—ë—Ç\n"
            "/unitorder ‚Äî  –†–∞—Å—á—ë—Ç –≤ —à—Ç—É—á–Ω—ã—Ö –æ–±—ä—ë–º–∞—Ö\n\n"
            "<b>–°—Ç–∞—Ç—É—Å –≥—Ä—É–∑–∞ –∏ –Ω–æ–º–µ—Ä–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è</b>\n"
            "/cargostatus ‚Äî  –°—Ç–∞—Ç—É—Å –≥—Ä—É–∑–∞\n"
            "/alltrackings  ‚Äî  –í—Å–µ –Ω–æ–º–µ—Ä–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n\n"
            "<b>–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞</b>\n"
            "/cargoinsurance ‚Äî –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –≥—Ä—É–∑–∞\n\n"
            "<b>–¢–∞—Ä–∏—Ñ—ã</b>\n"
            "/shippingrates ‚Äî –¢–∞—Ä–∏—Ñ—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–æ–≤ (–∞–≤–∏–∞, –∞–≤—Ç–æ, –º–æ—Ä–µ–º –∏ –ñ/–î)\n\n"
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –±–æ—Ç–∞\n"
            "/info ‚Äî –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é –±–æ—Ç–∞\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∑–∞–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±—É–¥–µ–º —Ä–∞–¥—ã –æ–±—Å—É–¥–∏—Ç—å –∏—Ö –≤–º–µ—Å—Ç–µ –≤ —á–∞—Ç–µ Optovka_uz @optovka_new\n\n"
            "–¶–µ–Ω—Ç—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏: @admin")

    await bot.send_message(chat_id=message.chat.id, text=text, parse_mode='HTML')

    await bot.send_message(chat_id=message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç.\n–≠—Ç–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å–≤—è–∑–∞–ª–∏—Å—å —Å –≤–∞–º–∏!", reply_markup=types.ReplyKeyboardMarkup(
            keyboard=[
                [
                    types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
                ]
            ],
            resize_keyboard=True
        ))

    await Lists.contact_received.set()

@dp.message_handler(content_types=ContentTypes.CONTACT, state=Lists.contact_received)
async def process_contact(message: types.Message, state: FSMContext):
    contact = message.contact
    await state.update_data(contact=contact)

    await bot.send_message(chat_id=message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.")

    await Lists.name_received.set()

@dp.message_handler(state=Lists.name_received)
async def process_name(message: types.Message, state: FSMContext):
    name = message.text
    data = await state.get_data()
    contact = data.get('contact')

    await bot.send_message(chat_id=message.chat.id, text=f"–°–ø–∞—Å–∏–±–æ, {name}! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç: {contact.phone_number}\n\n"
                           "–í—ã –º–æ–∂–∏—Ç–µ –ø—Ä–∏–∑—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.", reply_markup=ReplyKeyboardRemove())

    await state.finish()
